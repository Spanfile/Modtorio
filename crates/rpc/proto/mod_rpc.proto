syntax = "proto3";
package mod_rpc;

service ModRpc {
  rpc GetVersionInformation(Empty) returns (VersionInformation);
  rpc GetServerStatus(Empty) returns (ServerStatus);

  rpc ImportGame(ImportRequest) returns (stream Progress);
  rpc UpdateCache(UpdateCacheRequest) returns (stream Progress);

  rpc InstallMod(InstallModRequest) returns (stream Progress);
  rpc UpdateMods(UpdateModsRequest) returns (stream Progress);
  rpc EnsureModDependencies(EnsureModDependenciesRequest)
      returns (stream Progress);

  rpc GetServerSettings(GetServerSettingsRequest) returns (ServerSettings);
  rpc SetServerSettings(SetServerSettingsRequest) returns (Empty);
}

message Empty {}
message Version {
  uint64 major = 1;
  uint64 minor = 2;
  uint64 patch = 3;
}

message Progress {
  string message = 1;

  enum ProgressType {
    INDEFINITE = 0;
    DEFINITE = 1;
    DONE = 2;
  };
  ProgressType prog_type = 2;
  uint32 value = 3;
  uint32 max = 4;
}

message VersionInformation {
  Version version = 1;
  Version protocol_version = 2;
}

message ServerStatus {
  int64 uptime = 1;

  message Game {
    string path = 1;

    enum GameStatus {
      SHUTDOWN = 0;
      STARTING = 1;
      RUNNING = 2;
      SHUTTING_DOWN = 3;
    };
    GameStatus status = 2;
  };
  repeated Game games = 2;

  enum InstanceStatus {
    STARTING = 0;
    RUNNING = 1;
  };
  InstanceStatus instance_status = 3;
}

message ImportRequest { string path = 1; }
message UpdateCacheRequest { uint32 game_index = 1; }
message InstallModRequest {
  uint32 game_index = 1;
  string mod_name = 2;
  Version mod_version = 3;
}
message UpdateModsRequest { uint32 game_index = 1; }
message EnsureModDependenciesRequest { uint32 game_index = 1; }
message GetServerSettingsRequest { uint32 game_index = 1; }
message SetServerSettingsRequest {
  uint32 game_index = 1;
  ServerSettings settings = 2;
}

message ServerSettings {
  string name = 1;
  string description = 2;
  repeated string tags = 3;
  uint64 max_players = 4;

  message Visibility {
    bool public = 1;
    bool lan = 2;
  }
  Visibility visibility = 5;
  string username = 6;
  string password = 7;
  string token = 8;
  string game_password = 9;
  bool require_user_verification = 10;
  uint64 max_upload_in_kilobytes_per_second = 11;
  uint64 max_upload_slots = 12;
  uint64 minimum_latency_in_ticks = 13;
  bool ignore_player_limit_for_returning_players = 14;

  enum AllowCommands {
    YES = 0;
    NO = 1;
    ADMINS_ONLY = 2;
  }
  AllowCommands allow_commands = 15;
  uint64 autosave_interval = 16;
  uint64 autosave_slots = 17;
  uint64 afk_autokick_interval = 18;
  bool auto_pause = 19;
  bool only_admins_can_pause_the_game = 20;
  bool autosave_only_on_server = 21;
  bool non_blocking_saving = 22;
  uint64 minimum_segment_size = 23;
  uint64 minimum_segment_size_peer_count = 24;
  uint64 maximum_segment_size = 25;
  uint64 maximum_segment_size_peer_count = 26;
}
